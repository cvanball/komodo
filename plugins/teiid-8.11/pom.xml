<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.komodo</groupId>
		<artifactId>komodo-plugins</artifactId>
		<version>0.0.4-SNAPSHOT</version>
	</parent>
	<groupId>org.komodo.plugins.teiid</groupId>
	<artifactId>teiid-8.11</artifactId>
	<name>Teiid 8.11</name>
	<description>Teiid 8.11 client bundle</description>
	<packaging>bundle</packaging>

	<properties>
		<version.teiid>8.11.5</version.teiid>
		<version.aesh>0.33.12.redhat-1</version.aesh>

		<version.org.jboss.dmr>1.2.1.Final-redhat-1</version.org.jboss.dmr>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-common-core</artifactId>
				<version>${version.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-api</artifactId>
				<version>${version.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-engine</artifactId>
				<version>${version.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-jboss-admin</artifactId>
				<version>${version.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-admin</artifactId>
				<version>${version.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-client</artifactId>
				<version>${version.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss</groupId>
				<artifactId>jboss-dmr</artifactId>
				<version>${version.org.jboss.dmr}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.as</groupId>
				<artifactId>jboss-as-cli</artifactId>
				<version>${version.org.jboss.as}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.as</groupId>
				<artifactId>jboss-as-controller-client</artifactId>
				<version>${version.org.jboss.as}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>${version.apache.felix}</version>
				<scope>provided</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- These will be imported by the bundle at runtime so only required for 
			development -->
		<dependency>
			<groupId>org.komodo</groupId>
			<artifactId>komodo-spi</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.komodo.plugins</groupId>
			<artifactId>komodo-plugin-framework</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.jcr</groupId>
			<artifactId>jcr</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.modeshape</groupId>
			<artifactId>modeshape-jcr-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.teiid</groupId>
			<artifactId>teiid-common-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.teiid</groupId>
			<artifactId>teiid-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.teiid</groupId>
			<artifactId>teiid-engine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.teiid</groupId>
			<artifactId>teiid-jboss-admin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.teiid</groupId>
			<artifactId>teiid-admin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.teiid</groupId>
			<artifactId>teiid-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-dmr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.as</groupId>
			<artifactId>jboss-as-cli</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.as</groupId>
			<artifactId>jboss-as-controller-client</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.core</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.komodo</groupId>
			<artifactId>komodo-utils</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.komodo.plugins</groupId>
			<artifactId>komodo-plugin-framework</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<directory>${project.basedir}/src/test/resources</directory>
				<filtering>true</filtering>
			</resource>
			<!-- Provides a location for any extra objects to be included in the final 
				jar -->
			<resource>
				<directory>${project.basedir}/extra</directory>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<!-- Usual compiling ensuring the java version is 1.8 -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- aesh includes examples class in the root/default package. These classes 
				break the maven-bundle-plugin so we need to remove them from the jar by rebuilding 
				it. 1) Unpack the jar into a triage location -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-aesh</id>
						<phase>compile</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jboss.aesh</groupId>
									<artifactId>aesh</artifactId>
									<version>${version.aesh}</version>
									<outputDirectory>
										${project.build.directory}/aesh
									</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>unpack-for-teiid-testing</id>
						<phase>process-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jboss.as</groupId>
									<artifactId>jboss-as-dist</artifactId>
									<version>${version.org.jboss.as}</version>
									<type>zip</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.basedir}/lib/jbossas/</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
					<execution>
						<id>unpack-teiid</id>
						<phase>process-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.jboss.teiid</groupId>
									<artifactId>teiid</artifactId>
									<!-- Uses 8.11 version of teiid rather than default -->
									<version>${version.teiid}</version>
									<classifier>jboss-dist</classifier>
									<type>zip</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.basedir}/lib/jbossas/${version.jbossas.test}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 2) Run ant and delete those classes located in the root/default package -->
			<!-- 3) Recreate the jar and locate in 'extra' where it will be included 
				in the final jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<!-- Remove classes from the root package and re jar -->
						<id>fix-aesh</id>
						<phase>process-classes</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<delete>
									<fileset dir="${project.build.directory}/aesh"
										includes="*.class" />
								</delete>
								<jar
									destfile="${project.basedir}/extra/aesh-${version.aesh}-no-examples.jar">
									<fileset dir="${project.build.directory}/aesh" />
								</jar>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Bundle plugin responsible for embedding the dependencies in the final 
				jar and adding the bundle metadata to the manifest. Notes * aesh is excluded 
				from the dependencies in favour of the no-examples version * aesh-no-examples 
				is appended manually to the Bundle-ClassPath * Excludes komodo-spi from the 
				build since its imported at runtime * komodo-spi is explicitly labelled as 
				a requirement of the bundle using Import-Package * Transitive dependencies 
				are embedded to make the bundle whole * Metadata added for specific teiid 
				version -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<niceManifest>true</niceManifest>
					<excludeDependencies>komodo-spi</excludeDependencies>
					<instructions>
						<Import-Package>${imported.packages}</Import-Package>
						<Export-Package>!org.komodo.teiid</Export-Package>
						<Private-Package>org.komodo.teiid</Private-Package>
						<Embed-Dependency>*;scope=compile|runtime;type=!pom;artifactId=!aesh</Embed-Dependency>
						<Embed-Transitive>true</Embed-Transitive>
						<Bundle-ClassPath>.,{maven-dependencies},aesh-${version.aesh}-no-examples.jar</Bundle-ClassPath>
						<Teiid-Client-Version>${version.teiid}</Teiid-Client-Version>
						<Teiid-Service-Class>org.komodo.teiid.TeiidServiceImpl</Teiid-Service-Class>
					</instructions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Dependencies>org.jboss.teiid</Dependencies>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>default-test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- On clean, remove the jbossas testing directory -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>${project.basedir}/lib/jbossas</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.8,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project> 

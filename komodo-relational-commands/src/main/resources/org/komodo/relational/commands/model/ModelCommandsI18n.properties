# JBoss, Home of Professional Open Source.
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership. Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
#
# This library is free software =  you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation =  either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY =  without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library =  if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.

addPushdownFunctionExamples = \
\t add-pushdown-function functionToAdd
addPushdownFunctionHelp = \t%s - creates a pushdown function in a model.
addPushdownFunctionUsage = add-pushdown-function <function-name>

addSourceExamples = \
\t add-source sourceToAdd
addSourceHelp = \t%s - creates a source in a model.
addSourceUsage = add-source <source-name>

addStoredProcedureExamples = \
\t add-stored-procedure procedureToAdd
addStoredProcedureHelp = \t%s - creates a stored procedure in a model.
addStoredProcedureUsage = add-stored-procedure <procedure-name>

addTableExamples = \
\t add-table tableToAdd
addTableHelp = \t%s - creates a table in a model.
addTableUsage = add-table <table-name>

addUserDefinedFunctionExamples = \
\t add-user-defined-function functionToAdd
addUserDefinedFunctionHelp = \t%s - creates a user-defined function in a model.
addUserDefinedFunctionUsage = add-user-defined-function <function-name>

addViewExamples = \
\t add-view viewToAdd
addViewHelp = \t%s - creates a view in a model.
addViewUsage = add-view <view-name>

addVirtualProcedureExamples = \
\t add-virtual-procedure procedureToAdd
addVirtualProcedureHelp = \t%s - creates a virtual procedure in a model.
addVirtualProcedureUsage = add-virtual-procedure <procedure-name>

deletePushdownFunctionExamples = \
\t delete-pushdown-function functionToDelete
deletePushdownFunctionHelp = \t%s - deletes a pushdown function from a model.
deletePushdownFunctionUsage = delete-pushdown-function <procedure-name>

deleteSourceExamples = \
\t delete-source sourceToDelete
deleteSourceHelp = \t%s - deletes a source from a model.
deleteSourceUsage = delete-source <source-name>

deleteStoredProcedureExamples = \
\t delete-stored-procedure procedureToDelete
deleteStoredProcedureHelp = \t%s - deletes a stored procedure from a model.
deleteStoredProcedureUsage = delete-stored-procedure <procedure-name>

deleteTableExamples = \
\t delete-table tableToDelete
deleteTableHelp = \t%s - deletes a table from a model.
deleteTableUsage = delete-table <table-name>

deleteUserDefinedFunctionExamples = \
\t delete-user-defined-function functionToDelete
deleteUserDefinedFunctionHelp = \t%s - deletes a user-defined function from a model.
deleteUserDefinedFunctionUsage = delete-user-defined-function <function-name>

deleteViewExamples = \
\t delete-view viewToDelete
deleteViewHelp = \t%s - deletes a view from a model.
deleteViewUsage = delete-view <view-name>

deleteVirtualProcedureExamples = \
\t delete-virtual-procedure procedureToDelete
deleteVirtualProcedureHelp = \t%s - deletes a virtual procedure from a model.
deleteVirtualProcedureUsage = delete-virtual-procedure <procedure-name>

exportExamples = \
\t export-ddl /Users/me/outputDdl.ddl \n \
\t export-ddl /Users/me/outputDdl.ddl true
exportHelp = \t%s - exports the Model DDL to a local file.
exportUsage = export-ddl <file-path> [override]

importExamples = \
\t import-ddl /Users/me/myDdl.ddl \n \
\t import-ddl /Users/me/myDdl.ddl
importHelp = \t%s - imports DDL from a local file.
importUsage = import-ddl <file-path>

setModelPropertyExamples = \
\t set-property visible false
setModelPropertyHelp = \t%s - sets a model property value.
setModelPropertyUsage = set-property <property-name> <new-value>

showPushdownFunctionsExamples = \
\t show-pushdown-functions
showPushdownFunctionsHelp = \t%s - lists the pushdown functions found in a model.
showPushdownFunctionsUsage = show-pushdown-functions [pattern1 pattern2 ...]

showSourcesExamples = \
\t show-sources \n \
\t show-sources a* b* c*
showSourcesHelp = \t%s - lists the sources found in a model.
showSourcesUsage = show-sources [pattern1 pattern2 ...]

showStoredProceduresExamples = \
\t show-stored-procedures \n \
\t show-stored-procedures a* b* c*
showStoredProceduresHelp = \t%s - lists the stored procedures found in a model.
showStoredProceduresUsage = show-stored-procedures [pattern1 pattern2 ...]

showTablesExamples = \
\t show-tables \n \
\t show-tables a* b* c*
showTablesHelp = \t%s - lists the tables found in a model.
showTablesUsage = show-tables [pattern1 pattern2 ...]

showUserDefinedFunctionsExamples = \
\t show-user-defined-functions \n \
\t show-user-defined-functions a* b* c*
showUserDefinedFunctionsHelp = \t%s - lists the user-defined functions found in a model.
showUserDefinedFunctionsUsage = show-user-defined-functions [pattern1 pattern2 ...]

showViewsExamples = \
\t show-views \n \
\t show-views a* b* c*
showViewsHelp = \t%s - lists the views found in a model.
showViewsUsage = show-views

showVirtualProceduresExamples = \
\t show-virtual-procedures \n \
\t show-virtual-procedures a* b* c*
showVirtualProceduresHelp = \t%s - lists the virtual procedures found in a model.
showVirtualProceduresUsage = show-virtual-procedures [pattern1 pattern2 ...]

unsetModelPropertyExamples = \
\t unset-property modelType
unsetModelPropertyHelp = \t%s - either removes the model property or sets it back to its default value.
unsetModelPropertyUsage = unset-property <property-name>

cannotImportWouldCreateDuplicate = Cannot import '%s' - a '%s' with that name already exists.
childTypeNotAllowed = The object type '%s' is not allowed as a child of '%s'.
ddlExported = Model '%s' was successfully exported to '%s' with override flag of '%s'
ddlImported = DDL '%s' was successfully imported from '%s'
ddlImportInProgressMsg = Importing the DDL from file '%s'...
ddlImportSuccessMsg = Successfully imported DDL from file '%s'.
deleteTempContextFailedMsg = Error deleting the temporary import node '%s'.
errorCreatingTempNode = Could not create the temporary import node '%s'.
importFailedMsg = Failed to import from file '%s'.
invalidDDLParentType = Invalid parent type - can only import DDL into a Model or Schema.
invalidModelTypePropertyValue = The supplied value '%s' is invalid for the modelType property.
matchedPushdownFunctionsHeader = Pushdown Functions in model '%s' that match the specified pattern(s):
matchedSourcesHeader = Sources in model '%s' that match the specified pattern(s):
matchedStoredProceduresHeader = Stored procedures in model '%s' that match the specified pattern(s):
matchedTablesHeader = Tables in model '%s' that match the specified pattern(s):
matchedUserDefinedFunctionsHeader = User-defined functions in model '%s' that match the specified pattern(s):
matchedViewsHeader = Views in model '%s' that match the specified pattern(s):
matchedVirtualProceduresHeader = Virtual procedures in model '%s' that match the specified pattern(s):
missingPushdownFunctionName = A Pushdown Function requires a name.
missingSourceName = A Source requires a name.
missingStoredProcedureName = A Stored Procedure requires a name.
missingTableName = An Table requires a name.
missingUserDefinedFunctionName = A User Defined Function requires a name.
missingViewName = A View requires a name.
missingVirtualProcedureName = A Virtual Procedure requires a name.
noMatchingPushdownFunctions = There are no pushdown functions defined in model '%s' that match the specified pattern(s).
noMatchingSources = There are no sources defined in model '%s' that match the specified pattern(s).
noMatchingStoredProcedures = There are no stored procedures defined in model '%s' that match the specified pattern(s).
noMatchingTables = There are no tables defined in model '%s' that match the specified pattern(s).
noMatchingUserDefinedFunctions = There are no user-defined functions defined in model '%s' that match the specified pattern(s).
noMatchingViews = There are no views defined in model '%s' that match the specified pattern(s).
noMatchingVirtualProcedures = There are no virtual procedures defined in model '%s' that match the specified pattern(s).
noPushdownFunctions = There are no pushdown functions defined in model '%s'.
noSources = There are no sources defined in model '%s'.
noStoredProcedures = There are no stored procedures defined in model '%s'.
noTables = There are no tables defined in model '%s'.
noUserDefinedFunctions = There are no user-defined functions defined in model '%s'.
noViews = There are no views defined in model '%s'.
noVirtualProcedures = There are no virtual procedures defined in model '%s'.
pushdownFunctionAdded = Pushdown Function '%s' was successfully added.
pushdownFunctionDeleted = Pushdown Function '%s' was successfully deleted.
pushdownsHeader = Pushdown Functions in model '%s':
sourceDeleted = Source '%s' was successfully deleted.
sourceAdded = Source '%s' was successfully added.
sourcesHeader = Sources in model '%s':
storedProcedureAdded = Stored Procedure '%s' was successfully added.
storedProcedureDeleted = Stored Procedure '%s' was successfully deleted.
storedProceduresHeader = Stored procedures in model '%s':
tableAdded = Table '%s' was successfully added.
tableDeleted = Table '%s' was successfully deleted.
tablesHeader = Tables in model '%s':
userDefinedFunctionAdded = User Defined Function '%s' was successfully added.
userDefinedFunctionDeleted = User Defined Function '%s' was successfully deleted.
userDefinedFunctionsHeader = User-defined functions in model '%s':
viewAdded = View '%s' was successfully added.
viewDeleted = View '%s' was successfully deleted.
viewsHeader = Views in model '%s':
virtualProcedureAdded = Virtual Procedure '%s' was successfully added.
virtualProcedureDeleted = Virtual Procedure '%s' was successfully deleted.
virtualProceduresHeader = Virtual procedures in model '%s':
